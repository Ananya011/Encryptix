def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 9)

def check_winner(board):
    # Check rows
    for row in board:
        if row.count(row[0]) == len(row) and row[0] != ' ':
            return True

    # Check columns
    for col in range(len(board)):
        if board[0][col] == board[1][col] == board[2][col] and board[0][col] != ' ':
            return True

    # Check diagonals
    if board[0][0] == board[1][1] == board[2][2] and board[0][0] != ' ':
        return True
    if board[0][2] == board[1][1] == board[2][0] and board[0][2] != ' ':
        return True

    return False

def tic_tac_toe():
    board = [['1', '2', '3'], ['4', '5', '6'], ['7', '8', '9']]
    player1_name = input("Enter name for player 1 (X): ")
    player2_name = input("Enter name for player 2 (O): ")
    players = [player1_name, player2_name]
    symbols = ['X', 'O']

    for i in range(9):
        print_board(board)
        player = players[i % 2]
        symbol = symbols[i % 2]
        position = input(f"{player}, enter position (1-9): ")

        while not position.isdigit() or int(position) < 1 or int(position) > 9 or board[(int(position) - 1) // 3][(int(position) - 1) % 3] != position:
            print("Invalid input. Position must be a number between 1 and 9, and it must be empty.")
            position = input(f"{player}, enter position (1-9): ")

        row = (int(position) - 1) // 3
        col = (int(position) - 1) % 3

        board[row][col] = symbol

        if check_winner(board):
            print_board(board)
            print(f"{player} wins!")
            break
    else:
        print_board(board)
        print("It's a tie!")

tic_tac_toe()

